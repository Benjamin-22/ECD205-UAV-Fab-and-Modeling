package Pixhawk_functional

-- This package models the abstract functional chain of the Pixhawk Drone

public

  abstract Accelero
  features
    Accelero_Out : out data port;

  flows
    f1 : flow source Accelero_Out {latency => 100 us .. 300 us; };		

  properties
    Dispatch_Protocol => Periodic;
    Period => 4 ms; --  250 Hz
  end Accelero;


  abstract Gyro
  features
    Gyro_Out : out data port;
    
  flows
    f1 : flow source Gyro_Out {latency => 100 us .. 300 us; };		
    
  properties
    Dispatch_Protocol => Periodic;
    Period => 4 ms; --  250 Hz
  end Gyro;


  abstract Magneto
  features
    Magneto_Out : out data port;
    
 flows
   f1 : flow source Magneto_Out {latency => 100 us .. 300 us; };		
    
  properties
    Dispatch_Protocol => Periodic;
    Period => 4 ms; --  250 Hz
  end Magneto;
  
  
  abstract Pressure
  features
    Pressure_Out : out data port;
    
 flows
   f1 : flow source Pressure_Out {latency => 100 us .. 300 us; };		
    
  properties
    Dispatch_Protocol => Periodic;
    Period => 4 ms; --  250 Hz
  end Pressure;


  abstract Video
  features
   Video_Out : out data port;

  flows
    f1 : flow source Video_Out {latency => 1800 us .. 2200 us; };

  properties
	Dispatch_Protocol => Periodic;
	Period => 17 ms; -- 60 Hz
  end Video;


  abstract Sensor_Fusion
  features
    Accelero_In : in data port;
    Gyro_In     : in data port;
    Magneto_In  : in data port;
    Pressure_In : in data port;
    Data_F_Out  : out data port; -- Fusioned data
    
  flows
    f1 : flow path Accelero_In -> Data_F_Out {latency => 200 us .. 400 us; };	
    f2 : flow path Gyro_In -> Data_F_Out {latency => 200 us .. 400 us; };
    f3 : flow path Magneto_In -> Data_F_Out {latency => 200 us .. 400 us; };
    f4 : flow path Pressure_In -> Data_F_Out {latency => 200 us .. 400 us; };  
    
  properties
    Dispatch_Protocol => Periodic;
    Period => 4 ms; --  250 Hz
  end Sensor_Fusion;


  abstract Controller
  features
    Data_F_In : in data port;
    Gyro_In   : in data port;
    order : in data port;
    
    Motor_Out : out data port;
        
  flows
  	f1 : flow path Data_F_In -> Motor_Out {latency => 200 us .. 400 us; };	
    f2 : flow path Gyro_In -> Motor_Out {latency => 200 us .. 400 us; };
    f3 : flow sink order {latency => 200 us .. 400 us; };
    
  properties
    Dispatch_Protocol => Periodic;
    Period => 2 ms; --  500 Hz
  end Controller;


  abstract Pilot
  features
	Order : out data port;
	
	flows
    f1 : flow source Order {latency => 100 us .. 300 us; };

  properties
	Dispatch_Protocol => Sporadic;
	Period => 17 ms; 
	
  end Pilot;


  abstract Telemetry_rec
  features
	order_In : in data port;
	order_Out : out data port;

  flows
	order_rec : flow path order_In -> order_Out {latency => 100 us .. 300 us;};

  properties
	Dispatch_Protocol => Sporadic;
  end Telemetry_rec;

  
  abstract Motors
  features
    Motor_In : in data port;
    
  flows
    f1 : flow sink Motor_In {latency => 100 us .. 500 us; };
    			
  properties
    --Dispatch_Protocol => Aperiodic;
    Dispatch_Protocol => Periodic;
    Period => 2ms;
  end Motors;

  
  system Pixhawk_Functional_Chain
  end Pixhawk_Functional_Chain;

  system implementation Pixhawk_Functional_Chain.impl
  subcomponents
    --  Sensing
    Acc        : abstract Accelero;
    Gyro       : abstract Gyro;
    Magneto    : abstract Magneto;
    Pressure   : abstract Pressure;
	Video 	   : abstract Video;
	
    --  Computing
    Fusion     : abstract Sensor_Fusion;
    Controller : abstract Controller;
    
    --  Commands/communication
    Pilot      : abstract Pilot;
    Telemetry_rec : abstract Telemetry_rec;
    
    --  Acting
    Motors : abstract Motors;

  connections
    FC1 : port Acc.Accelero_Out     -> Fusion.Accelero_In;
    FC2 : port Gyro.Gyro_Out        -> Fusion.Gyro_In;
    FC3 : port Magneto.Magneto_Out  -> Fusion.Magneto_In;
    FC4 : port Pressure.Pressure_Out  -> Fusion.Pressure_In;

    FC5 : port Gyro.Gyro_Out        -> Controller.Gyro_In;
    FC6 : port Fusion.Data_F_Out    -> Controller.Data_F_In;

    FC7 : port Controller.Motor_Out -> Motors.Motor_In;

    FC8 : port Pilot.Order -> Telemetry_rec.Order_In;
    FC9 : port Telemetry_rec.Order_Out -> Controller.order;
    
  	flows
  	-- Gyro reading sent to controller (fusion then to controller for slow reading), and motors are adjusted accordingly
  	-- All sensors in functional model have same latency so gyro is included as example
  	f_slow_gyro : end to end flow Gyro.f1 -> FC2 -> Fusion.f2 -> FC6 -> Controller.f1 -> FC7 -> Motors.f1 { latency => 0 ms .. 9 ms;};
  	f_fast_gyro : end to end flow Gyro.f1 -> FC5 -> Controller.f2 -> FC7 -> Motors.f1 { latency => 0 ms .. 5 ms;};
    
    --Pilot gives order, received by telemetry, sends to flight controller
    f_command : end to end flow Pilot.f1 -> FC8 -> Telemetry_rec.order_rec -> FC9 -> Controller.f3 { latency => 0 ms .. 4 ms;};
    
  end Pixhawk_Functional_Chain.impl;

end Pixhawk_functional;